# Generated by Django 2.0.5 on 2018-06-17 12:34

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.Category')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Купон')),
                ('slug', models.SlugField(unique=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('coupon_link', models.URLField(max_length=250)),
                ('expired', models.DateTimeField()),
                ('promocode', models.CharField(blank=True, max_length=200)),
                ('coupon_image', imagekit.models.fields.ProcessedImageField(blank=True, upload_to='coupon_image/%Y/%m')),
                ('author', models.ForeignKey(default=django.contrib.auth.models.User, on_delete=django.db.models.deletion.CASCADE, related_name='shop_coupons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Купон',
                'verbose_name_plural': 'Купоны',
            },
        ),
        migrations.CreateModel(
            name='CouponType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Тип купона',
                'verbose_name_plural': 'Тип купонов',
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='скидка')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('param', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('vendor', models.CharField(blank=True, max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('old_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('url', models.URLField()),
                ('views', models.PositiveIntegerField(default=0)),
                ('deals_image', imagekit.models.fields.ProcessedImageField(blank=True, max_length=250, upload_to='deals_images/%Y/%m')),
                ('author', models.ForeignKey(default=django.contrib.auth.models.User, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('categoryId', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Category')),
            ],
            options={
                'verbose_name': 'Скидка',
                'verbose_name_plural': 'Скидки',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='магазин')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image_store', imagekit.models.fields.ProcessedImageField(blank=True, upload_to='store_image/%Y/%m/')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Магазины',
            },
        ),
        migrations.AddField(
            model_name='deal',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Store'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='coupon_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Тип_купона', to='shop.CouponType'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Store'),
        ),
    ]
